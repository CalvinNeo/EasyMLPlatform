package docs

import (
	"encoding/json"
	"strings"

	"github.com/astaxie/beego"
	"github.com/astaxie/beego/swagger"
)

const (
    Rootinfo string = `{"apiVersion":"0.0.1","swaggerVersion":"1.2","apis":[{"path":"/data_set","description":"DataSet API Controller\n"},{"path":"/job","description":"Job API Controller\n"},{"path":"/node","description":"Node Machine API Controller\n"},{"path":"/job_slice","description":"Job slice API Controller\n"},{"path":"/result_set","description":"ResultSet API Controller\n"}],"info":{"title":"Mokou Machine Learning Base Platform API","description":"support base functions for Mokou Machine Learning Platform","contact":"liuhanlcj1994@gmail.com","termsOfServiceUrl":"http://reficuls.cn/","license":"Url http://www.apache.org/licenses/LICENSE-2.0.html"}}`
    Subapi string = `{"/data_set":{"apiVersion":"0.0.1","swaggerVersion":"1.2","basePath":"","resourcePath":"/data_set","produces":["application/json","application/xml","text/plain","text/html"],"apis":[{"path":"/upload/path","description":"","operations":[{"httpMethod":"POST","nickname":"Upload","type":"","summary":"Upload a new data set to server by file path","parameters":[{"paramType":"form","name":"filePath","description":"\"The data set file path, must as same server\"","dataType":"string","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"dropHeader","description":"\"The data set if has header\"","dataType":"bool","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"data set id","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/set","description":"","operations":[{"httpMethod":"POST","nickname":"Set","type":"","summary":"Set meta data and ext data. If the param is empty string, then the original ext data are retained","parameters":[{"paramType":"form","name":"id","description":"\"The data set id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"meta","description":"\"The data set's meta data\"","dataType":"string","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"ext","description":"\"The data set's ext data\"","dataType":"string","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"empty","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/delete","description":"","operations":[{"httpMethod":"POST","nickname":"Delete","type":"","summary":"Delete data set","parameters":[{"paramType":"form","name":"id","description":"\"The data set id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"empty","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/query","description":"","operations":[{"httpMethod":"POST","nickname":"Query","type":"","summary":"Query data set info","parameters":[{"paramType":"form","name":"id","description":"\"The data set id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"controllers.DataSet","responseModel":"DataSet"},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/query/list","description":"","operations":[{"httpMethod":"POST","nickname":"Query List","type":"","summary":"Query all data set info","responseMessages":[{"code":200,"message":"controllers.DataSetList","responseModel":"DataSetList"},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/download","description":"","operations":[{"httpMethod":"GET","nickname":"Download","type":"","summary":"Down data set","parameters":[{"paramType":"query","name":"id","description":"\"The data set id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"query","name":"splitNumber","description":"\"Data set split number\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"query","name":"index","description":"\"Data set split index\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"set","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]}],"models":{"DataSet":{"id":"DataSet","properties":{"Ext":{"type":"string","description":"","format":""},"Id":{"type":"int64","description":"","format":""},"LineNumber":{"type":"int64","description":"","format":""},"Meta":{"type":"string","description":"","format":""}}},"DataSetList":{"id":"DataSetList","properties":{"Objects":{"type":"array","description":"","items":{"$ref":"DataSet"},"format":""}}}}},"/job":{"apiVersion":"0.0.1","swaggerVersion":"1.2","basePath":"","resourcePath":"/job","produces":["application/json","application/xml","text/plain","text/html"],"apis":[{"path":"/submit","description":"","operations":[{"httpMethod":"POST","nickname":"Submit","type":"","summary":"Submit a new job","parameters":[{"paramType":"form","name":"dataSetId","description":"\"The job used data set id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"pluginId","description":"\"The job used plugin id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"splitNumber","description":"\"Job split number\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"job id","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/query/list","description":"","operations":[{"httpMethod":"POST","nickname":"Query List","type":"","summary":"Query all job info","responseMessages":[{"code":200,"message":"controllers.JobList","responseModel":"JobList"},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/query","description":"","operations":[{"httpMethod":"POST","nickname":"Query","type":"","summary":"Query job info","parameters":[{"paramType":"form","name":"id","description":"\"Job id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"controllers.Job","responseModel":"Job"},{"code":403,"message":"{string} error description","responseModel":""}]}]}],"models":{"DataSet":{"id":"DataSet","properties":{"Ext":{"type":"string","description":"","format":""},"Id":{"type":"int64","description":"","format":""},"LineNumber":{"type":"int64","description":"","format":""},"Meta":{"type":"string","description":"","format":""}}},"Job":{"id":"Job","properties":{"CompletedNumber":{"type":"int64","description":"","format":""},"Id":{"type":"int64","description":"","format":""},"Plugin":{"type":"int64","description":"","format":""},"Slices":{"type":"array","description":"","items":{"$ref":"\u0026{models JobSlice}"},"format":""},"SplitNumber":{"type":"int64","description":"","format":""},"UsedDataSet":{"type":"DataSet","description":"","format":""}}},"JobList":{"id":"JobList","properties":{"Objects":{"type":"array","description":"","items":{"$ref":"Job"},"format":""}}}}},"/job_slice":{"apiVersion":"0.0.1","swaggerVersion":"1.2","basePath":"","resourcePath":"/job_slice","produces":["application/json","application/xml","text/plain","text/html"],"apis":[{"path":"/acquire","description":"","operations":[{"httpMethod":"POST","nickname":"Acquire Job Slice","type":"","summary":"Acquire a job slice that status is ready to work","responseMessages":[{"code":200,"message":"models.JobSlice","responseModel":"JobSlice"},{"code":403,"message":"{string} error description","responseModel":""}]}]}],"models":{"DataSet":{"id":"DataSet","properties":{"DropHeader":{"type":"bool","description":"","format":""},"Ext":{"type":"string","description":"","format":""},"FilePath":{"type":"string","description":"","format":""},"Id":{"type":"int64","description":"","format":""},"LineNumber":{"type":"int64","description":"","format":""},"Meta":{"type":"string","description":"","format":""}}},"Job":{"id":"Job","properties":{"CompletedNumber":{"type":"int64","description":"","format":""},"Id":{"type":"int64","description":"","format":""},"Plugin":{"type":"int64","description":"","format":""},"Slices":{"type":"array","description":"","items":{"$ref":"JobSlice"},"format":""},"SplitNumber":{"type":"int64","description":"","format":""},"UsedDataSet":{"type":"DataSet","description":"","format":""}}},"JobSlice":{"id":"JobSlice","properties":{"Id":{"type":"int64","description":"","format":""},"Index":{"type":"int64","description":"","format":""},"Job":{"type":"Job","description":"","format":""},"ResultSetPath":{"type":"string","description":"","format":""},"Status":{"type":"int","description":"","format":""}}}}},"/node":{"apiVersion":"0.0.1","swaggerVersion":"1.2","basePath":"","resourcePath":"/node","produces":["application/json","application/xml","text/plain","text/html"],"apis":[{"path":"/acquire","description":"","operations":[{"httpMethod":"POST","nickname":"Acquire","type":"","summary":"Acquire id","responseMessages":[{"code":200,"message":"id","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/alive","description":"","operations":[{"httpMethod":"POST","nickname":"Alive","type":"","summary":"Report node machine alive and flush machine status","parameters":[{"paramType":"form","name":"id","description":"\"The node machine id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"cpu","description":"\"The node machine cpu used rate\"","dataType":"float32","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"memory","description":"\"The node machine memory used rate\"","dataType":"float32","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"empty","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/query","description":"","operations":[{"httpMethod":"POST","nickname":"Query","type":"","summary":"Query node info","parameters":[{"paramType":"form","name":"id","description":"\"The node id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"node.NodeStatus","responseModel":"NodeStatus"},{"code":403,"message":"{string} error description","responseModel":""}]}]},{"path":"/query/list","description":"","operations":[{"httpMethod":"POST","nickname":"Query List","type":"","summary":"Query all node info","responseMessages":[{"code":200,"message":"controllers.NodeStatusList","responseModel":"NodeStatusList"}]}]}],"models":{"NodeStatus":{"id":"NodeStatus","properties":{"Cpu":{"type":"float64","description":"","format":""},"Id":{"type":"int64","description":"","format":""},"Memory":{"type":"float64","description":"","format":""}}},"NodeStatusList":{"id":"NodeStatusList","properties":{"Objects":{"type":"array","description":"","items":{"$ref":"\u0026{node NodeStatus}"},"format":""}}}}},"/result_set":{"apiVersion":"0.0.1","swaggerVersion":"1.2","basePath":"","resourcePath":"/result_set","produces":["application/json","application/xml","text/plain","text/html"],"apis":[{"path":"/upload","description":"","operations":[{"httpMethod":"POST","nickname":"Upload","type":"","summary":"Upload result set","parameters":[{"paramType":"form","name":"file","description":"\"Result set data\"","dataType":"file","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0},{"paramType":"form","name":"jobSliceId","description":"\"The job slice id\"","dataType":"int64","type":"","format":"","allowMultiple":false,"required":true,"minimum":0,"maximum":0}],"responseMessages":[{"code":200,"message":"empty","responseModel":""},{"code":403,"message":"{string} error description","responseModel":""}]}]}]}}`
    BasePath string= "/v1"
)

var rootapi swagger.ResourceListing
var apilist map[string]*swagger.ApiDeclaration

func init() {
	if beego.EnableDocs {
		err := json.Unmarshal([]byte(Rootinfo), &rootapi)
		if err != nil {
			beego.Error(err)
		}
		err = json.Unmarshal([]byte(Subapi), &apilist)
		if err != nil {
			beego.Error(err)
		}
		beego.GlobalDocApi["Root"] = rootapi
		for k, v := range apilist {
			for i, a := range v.Apis {
				a.Path = urlReplace(k + a.Path)
				v.Apis[i] = a
			}
			v.BasePath = BasePath
			beego.GlobalDocApi[strings.Trim(k, "/")] = v
		}
	}
}


func urlReplace(src string) string {
	pt := strings.Split(src, "/")
	for i, p := range pt {
		if len(p) > 0 {
			if p[0] == ':' {
				pt[i] = "{" + p[1:] + "}"
			} else if p[0] == '?' && p[1] == ':' {
				pt[i] = "{" + p[2:] + "}"
			}
		}
	}
	return strings.Join(pt, "/")
}
